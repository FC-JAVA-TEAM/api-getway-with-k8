#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: apigateway
#  labels:
#    app: apigateway
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: apigateway
#  template:
#    metadata:
#      labels:
#        app: apigateway
#    spec:
#      containers:
#        - name: apigateway
#          image: gcr.io/ultimate-flare-452110-g3/apigateway:0.0.1
#          imagePullPolicy: Always
#          command: ["/bin/sh", "-c", "tail -f /dev/null"]
#          ports:
#            - containerPort: 8080
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: apigateway-svc
#spec:
#  ports:
#    - targetPort: 8080
#      port: 80
#  selector:
#    app: apigateway

apiVersion: apps/v1
kind: Deployment
metadata:
  name: apigateway
  labels:
    app: apigateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apigateway
  template:
    metadata:
      labels:
        app: apigateway
    spec:
      containers:
        - name: apigateway
          image: gcr.io/ultimate-flare-452110-g3/apigateway:0.0.1
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: apigateway-svc
spec:
  type: LoadBalancer
  ports:
    - targetPort: 8080
      port: 80
  selector:
    app: apigateway
