#name: github action demo build
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#env:
#  PROJECT_ID: ultimate-flare-452110-g3
#  GKE_CLUSTER: note-app-cluster
#  GKE_ZONE: us-central1-c
#
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 21
#        uses: actions/setup-java@v4
#        with:
#          java-version: '21'
#          distribution: 'adopt'
#          cache: maven
#      - name: Build with Maven
#        run: mvn clean install
#
#      - name: Echo Build Successful
#        run: echo "Build was successful!"
#      - name: Configure Docker for GCP
#        run: gcloud auth configure-docker gcr.io
#
#      # Authenticate with Google Cloud using service account key
#      - name: Set up Google Cloud authentication
#        uses: google-github-actions/auth@v2
#        with:
#          credentials_json: ${{ secrets.GCP_SA_KEY }}  # Add your GCP service account key as a secret in GitHub
#
#
#      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#      #- name: Update dependency graph
#      #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
#      - name: Echo Build Successful
#        run: echo "Build was successful!"
#
#      # Build & push Docker image (corrected section)
#      - name: Build & push Docker image
#        uses: mr-smithers-excellent/docker-build-push@v5
#        with:
#          image: ultimate-flare-452110-g3/apigateway
#          tags: 0.0.2 latest
#          dockerfile: ./Dockerfile  # Ensure the correct relative path to the Dockerfile
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#          registry: gcr.io  # Set registry here within the `with` block
#
#  Deploy:
#    needs: build
#    runs-on: ubuntu-latest
#    if: always()  # Ensures this job runs regardless of the 'build' job's outcome
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@main  # Ensure this matches your default branch
#
#      - name: Authenticate with GKE
#        uses: ameydev/gke-kubectl-action@master
#        env:
#          PROJECT_ID: ${{ env.PROJECT_ID }}
#          CLUSTER_NAME: ${{ env.GKE_CLUSTER }}
#          ZONE_NAME: ${{ env.GKE_ZONE }}
#          APPLICATION_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
#        with:
#          args: apply -f deployment.yaml


name: GitHub Actions CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  PROJECT_ID: ultimate-flare-452110-g3
  GKE_CLUSTER: note-app-cluster
  GKE_ZONE: us-central1-c
  REGION: us-central1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven
        run: mvn clean install

      - name: Echo Build Successful
        run: echo "Build was successful!"

      - name: Configure Docker for GCP
        run: gcloud auth configure-docker gcr.io

      - name: Set up Google Cloud authentication
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: ${{ env.PROJECT_ID }}/apigateway
          tags: 0.0.3, latest
          dockerfile: ./Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: gcr.io

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: always()  # Ensures this job runs regardless of the 'build' job's outcome

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Google Cloud authentication
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
          project_id: ${{ env.PROJECT_ID }}
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: Deploy to GKE
        run: |
          kubectl apply -f deployment.yaml